{"version":3,"sources":["webpack:///./node_modules/react-bootstrap/esm/Jumbotron.js","webpack:///./node_modules/react-bootstrap/esm/Image.js","webpack:///./src/components/Post.js","webpack:///./src/pages/index.js"],"names":["Jumbotron","forwardRef","_ref","ref","_classes","_ref$as","as","Component","className","fluid","bsPrefix","props","classes","createElement","defaultProps","displayName","Image","rounded","roundedCircle","thumbnail","Post","render_data","data","image_small","allFile","edges","find","edge","node","name","image","console","log","Fragment","Row","style","background","position","width","height","top","left","zIndex","display","state","showOverlay","onClick","event","setState","src","publicURL","maxWidth","transform","Col","sm","fontSize","href","title","textAlign","dangerouslySetInnerHTML","__html","content","minHeight","render","query","IndexPage","pageInfo","pageName","keywords","Container","allMarkdownRemark","map","index","parts","fileAbsolutePath","split","fileName","length","key","frontmatter","html"],"mappings":"wQAQIA,EAAY,IAAMC,YAAW,SAAUC,EAAMC,GAC/C,IAAIC,EAEAC,EAAUH,EAAKI,GACfC,OAAwB,IAAZF,EAAqB,MAAQA,EACzCG,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbC,EAAWR,EAAKQ,SAChBC,EAAQ,YAA8BT,EAAM,CAAC,KAAM,YAAa,QAAS,aAGzEU,IAAWR,EAAW,IAD1BM,EAAW,YAAmBA,EAAU,eACW,EAAMN,EAASM,EAAW,UAAYD,EAAOL,GAChG,OAAO,IAAMS,cAAcN,EAAW,YAAS,CAC7CJ,IAAKA,GACJQ,EAAO,CACRH,UAAW,IAAWA,EAAWI,SAGrCZ,EAAUc,aArBS,CACjBL,OAAO,GAqBTT,EAAUe,YAAc,YACT,Q,4ECjBXC,EAAQ,IAAMf,YAAW,SAAUC,EAAMC,GAC3C,IAAIO,EAAWR,EAAKQ,SAChBF,EAAYN,EAAKM,UACjBC,EAAQP,EAAKO,MACbQ,EAAUf,EAAKe,QACfC,EAAgBhB,EAAKgB,cACrBC,EAAYjB,EAAKiB,UACjBR,EAAQ,YAA8BT,EAAM,CAAC,WAAY,YAAa,QAAS,UAAW,gBAAiB,cAE/GQ,EAAW,YAAmBA,EAAU,OACxC,IAAIE,EAAU,IAAWH,GAASC,EAAW,SAAUO,GAAW,UAAWC,GAAiB,iBAAkBC,GAAaT,EAAW,cACxI,OAAO,IAAMG,cAAc,MAAO,YAAS,CAEzCV,IAAKA,GACJQ,EAAO,CACRH,UAAW,IAAWA,EAAWI,SAGrCI,EAAMD,YAAc,QACpBC,EAAMF,aAzBa,CACjBL,OAAO,EACPQ,SAAS,EACTC,eAAe,EACfC,WAAW,GAsBE,Q,IC8EAC,E,qHAvGX,WAAYT,GAAQ,IAAD,SACf,cAAMA,IAAN,MAMJU,YAAc,SAACC,GACX,IAAMC,EAAcD,EAAKE,QAAQC,MAAMC,MACnC,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,OAAS,EAAKlB,MAAMmB,MAAM,YAE1CA,EAAQR,EAAKE,QAAQC,MAAMC,MAC7B,SAAAC,GAAI,OAAIA,EAAKC,KAAKC,OAAS,EAAKlB,MAAMmB,SAI1C,OAFAC,QAAQC,IAAIV,GACZS,QAAQC,IAAIF,GAER,kBAAC,IAAMG,SAAP,KACI,kBAACC,EAAA,EAAD,KACI,yBAAKC,MAAO,CACRC,WAAY,YACZC,SAAU,QACVC,MAAO,QACPC,OAAQ,QACRC,IAAK,EACLC,KAAM,EACNC,OAAQ,IACRC,QAAS,EAAKC,MAAMC,YAAc,QAAS,QAE/CC,QAAS,SAACC,GAAY,EAAKC,SAAS,CAACH,aAAc,EAAKD,MAAMC,gBAE1D,kBAAC,EAAD,CAAOI,IAAKnB,EAAMF,KAAKsB,UACnBzC,OAAK,EACL0B,MAAS,CACLgB,SAAU,OACVd,SAAU,WACVI,KAAM,OACND,IAAK,OACLY,UAAW,4BAIvB,kBAACC,EAAA,EAAD,CAAKC,GAAI,GACL,uBACAnB,MAAO,CAACoB,SAAU,SAClBT,QAAS,SAACC,GAAY,EAAKC,SAAS,CAACH,aAAc,EAAKD,MAAMC,eAC9DW,KAAK,KAED,kBAAC,EAAD,CAAOP,IAAK1B,EAAYK,KAAKsB,UACzBzC,OAAK,IACP,6BAPN,uBAYJ,kBAAC4C,EAAA,EAAD,CAAKC,GAAI,GACL,4BAAK,EAAK3C,MAAM8C,OAMhB,yBACItB,MAAO,CACHuB,UAAW,QAEfC,wBAAyB,CAAEC,OAAQ,EAAKjD,MAAMkD,aAI1D,kBAAC3B,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,CAAKlB,MAAO,CAAC2B,UAAW,SAAxB,QArEZ,EAAKlB,MAAQ,CACTC,aAAa,GAHF,E,mBA6EnBkB,OAAA,WAAU,IAAD,OACL,OACI,kBAAC,IAAM9B,SAAP,KAEI,kBAAC,cAAD,CACA+B,MAAK,aAYLD,OAAQ,SAACzC,GAAD,OAAU,EAAKD,YAAYC,IAbnC,W,GAlFGf,a,wBC0CNyD,GAFEC,UArCG,SAAC,GAAD,IAAG3C,EAAH,EAAGA,KAAH,OACd,kBAAC,IAAD,CAAQ4C,SAAU,CAAEC,SAAU,UAC1B,kBAAC,IAAD,CAAKV,MAAM,OAAOW,SAAU,CAAC,SAAD,uBAC5B,kBAACC,EAAA,EAAD,CAAW7D,UAAU,eACjB,kBAAC0B,EAAA,EAAD,KACI,kBAACmB,EAAA,EAAD,KACI,oIAGA,sPAGA,kBAAC,EAAD,KACI,8CADJ,wVAKP/B,EAAKgD,kBAAkB7C,MAAM8C,KAAI,WAAWC,GAAW,IAAnB5C,EAAkB,EAAlBA,KAC3B6C,EAAQ7C,EAAK8C,iBAAiBC,MAAM,KACpCC,EAAWH,EAAMA,EAAMI,OAAO,GAEpC,OADA9C,QAAQC,IAAI4C,EAASD,MAAM,KAAK,IAIhC,kBAAC,EAAD,CACIG,IAAK,QAAUN,EACf1C,MAAO8C,EAASD,MAAM,KAAK,GAC3BlB,MAAO7B,EAAKmD,YAAYtB,MACxBI,QAASjC,EAAKoD,aAWhB,e","file":"component---src-pages-index-js-f1535e817e9173ee3836.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Jumbotron = React.forwardRef(function (_ref, ref) {\n  var _classes;\n\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      bsPrefix = _ref.bsPrefix,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"fluid\", \"bsPrefix\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'jumbotron');\n  var classes = (_classes = {}, _classes[bsPrefix] = true, _classes[bsPrefix + \"-fluid\"] = fluid, _classes);\n  return React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nJumbotron.defaultProps = defaultProps;\nJumbotron.displayName = 'Jumbotron';\nexport default Jumbotron;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false,\n  rounded: false,\n  roundedCircle: false,\n  thumbnail: false\n};\nvar Image = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      fluid = _ref.fluid,\n      rounded = _ref.rounded,\n      roundedCircle = _ref.roundedCircle,\n      thumbnail = _ref.thumbnail,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"fluid\", \"rounded\", \"roundedCircle\", \"thumbnail\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'img');\n  var classes = classNames(fluid && bsPrefix + \"-fluid\", rounded && \"rounded\", roundedCircle && \"rounded-circle\", thumbnail && bsPrefix + \"-thumbnail\");\n  return React.createElement(\"img\", _extends({\n    // eslint-disable-line jsx-a11y/alt-text\n    ref: ref\n  }, props, {\n    className: classNames(className, classes)\n  }));\n});\nImage.displayName = 'Image';\nImage.defaultProps = defaultProps;\nexport default Image;","import React, { Component } from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport {Row, Col, Image } from \"react-bootstrap\"\n\n\nclass Post extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showOverlay: false, \n        };\n    }\n\n    render_data = (data) => {\n        const image_small = data.allFile.edges.find(\n            edge => edge.node.name === this.props.image+\"_small\"\n        );\n        const image = data.allFile.edges.find(\n            edge => edge.node.name === this.props.image\n        );\n        console.log(data);\n        console.log(image);\n        return(\n            <React.Fragment>\n                <Row>\n                    <div style={{\n                        background: \"#000000af\",\n                        position: \"fixed\",\n                        width: \"100vw\",\n                        height: \"100vh\",\n                        top: 0,\n                        left: 0,\n                        zIndex: 1000,\n                        display: this.state.showOverlay ? \"block\": \"none\"  \n                    }}\n                    onClick={(event) => { this.setState({showOverlay: !this.state.showOverlay }); }}\n                    >\n                        <Image src={image.node.publicURL}\n                            fluid  \n                            style = {{\n                                maxWidth: \"90vw\",\n                                position: \"absolute\",\n                                left: \"50vw\",\n                                top: \"50vh\",\n                                transform: \"translate(-50%, -50%)\"\n                            }}\n                            />\n                    </div>\n                    <Col sm={8}>\n                        <a \n                        style={{fontSize: \"0.8em\"}}\n                        onClick={(event) => { this.setState({showOverlay: !this.state.showOverlay }); }}\n                        href=\"#\"\n                        >\n                            <Image src={image_small.node.publicURL} \n                                fluid  \n                            /><br/>\n                        \n                            (Click to enlarge)\n                        </a>\n                    </Col>\n                    <Col sm={4}>\n                        <h3>{this.props.title}</h3>\n                        {/* <p dangerouslySetInnerHTML={{__html: this.props.content}}></p> \n                        => <p> does not work\n                        => https://github.com/gatsbyjs/gatsby/issues/11108\n                        */}\n     \n                        <div \n                            style={{\n                                textAlign: \"left\",\n                            }}\n                            dangerouslySetInnerHTML={{ __html: this.props.content }} />\n\n                    </Col>\n                </Row>\n                <Row>\n                    <Col style={{minHeight: \"40px\"}}>&nbsp;</Col>\n                </Row>\n            </React.Fragment>\n        );\n    };\n\n    render() {\n        return (\n            <React.Fragment>\n                \n                <StaticQuery\n                query={graphql`\n                query SiteTitleQueryFEZ {\n                    allFile(filter: {ext: {eq: \".png\"}, sourceInstanceName: {eq: \"charts\"}}) {\n                        edges {\n                          node {\n                            publicURL\n                            name\n                          }\n                        }\n                      }\n                }\n                `}\n                render={(data) => this.render_data(data)}\n            />\n            </React.Fragment>\n            \n\n        );\n    }\n}\n\nexport default Post;","import React from \"react\"\nimport { Row, Col, Container, Jumbotron } from \"react-bootstrap\"\nimport { graphql } from \"gatsby\"\nimport Post from \"../components/Post\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst IndexPage = ({ data }) => (\n    <Layout pageInfo={{ pageName: \"index\" }}>\n        <SEO title=\"Home\" keywords={[`gatsby`, `react`, `bootstrap`]} />\n        <Container className=\"text-center\">\n            <Row>\n                <Col>\n                    <p>\n                        This page aims to visualize the COVID-19 pandemy using data provided by the Johns Hopkins University.\n          </p>\n                    <p>\n                        While many pages visualize the current data on different levels, I have not yet seen any page that tries to focus on visualizing the timeline on a per-country level. This page shows the results of my visualizations.\n          </p>\n                    <Jumbotron>\n                        <strong>Disclaimer</strong>: This page only is meant to display the data gathered by the Johns Hopkins University. I hereby disclaim any and all representations and warranties with respect to the Website, including accuracy, fitness for use, and merchantability. Reliance on the Website for medical guidance or use of the Website in commerce is strictly prohibited.\n          </Jumbotron>\n                </Col>\n            </Row>\n            {data.allMarkdownRemark.edges.map(({ node }, index) => {\n                const parts = node.fileAbsolutePath.split(\"/\");\n                const fileName = parts[parts.length-1];\n                console.log(fileName.split(\".\")[0]) ;  \n                return (\n                \n                \n                <Post\n                    key={\"POST_\" + index}\n                    image={fileName.split(\".\")[0]}\n                    title={node.frontmatter.title}\n                    content={node.html} />\n                );\n            }\n                )\n            }\n        </Container>\n    </Layout>\n)\n\nexport default IndexPage\n\nexport const query = graphql`\n  query {\n    site {\n        siteMetadata {\n          title\n        }\n      }\n      allMarkdownRemark(sort: { fields: [frontmatter___sorter], order: ASC }) {\n        edges {\n          node {\n            html\n            fileAbsolutePath\n            frontmatter {\n              title\n             }\n          }\n        }\n      }\n  }\n`"],"sourceRoot":""}